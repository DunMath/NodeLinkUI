<Window x:Class="NodeLinkUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:NodeLinkUI"
        xmlns:core="clr-namespace:NodeCore;assembly=NodeCore"
        Title="NodeLink Control Panel" Height="600" Width="800">
    <Window.Resources>
        <local:BooleanToStringConverter x:Key="BooleanToStringConverter" />
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Row 0: Role and status -->
        <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,0,0,10">
            <TextBlock Text="Current Role:" Margin="0,0,10,0"/>
            <TextBlock x:Name="RoleLabel" FontWeight="Bold" Margin="0,0,20,0"/>
            <Button x:Name="SwitchRoleButton" Content="Switch Role" Click="SwitchRole_Click" Margin="0,0,20,0"/>
            <TextBlock Text="Master Status:" Margin="0,0,10,0"/>
            <TextBlock x:Name="MasterStatusLabel" FontWeight="Bold" Margin="0,0,20,0"/>
            <TextBlock Text="Uptime:" Margin="0,0,10,0"/>
            <TextBlock x:Name="MasterUptimeLabel" FontWeight="Bold"/>
        </StackPanel>

        <!-- Row 1: Controls -->
        <WrapPanel Grid.Row="1" Margin="0,0,0,10">
            <Button x:Name="RegisterAgentButton" Content="Register Agent" Width="100" Margin="0,0,10,5" Click="RegisterAgent_Click"/>
            <Button x:Name="DispatchTaskButton" Content="Dispatch Task" Width="100" Margin="0,0,10,5" Click="DispatchTask_Click"/>
            <Button x:Name="BroadcastButton" Content="Broadcast" Width="100" Margin="0,0,10,5" Click="Broadcast_Click"/>
            <TextBox x:Name="TaskInputBox" Width="120" Margin="0,0,10,5" VerticalAlignment="Center"/>
            <Button x:Name="CustomTaskButton" Content="Send Custom Task" Width="120" Margin="0,0,10,5" Click="CustomTaskButton_Click"/>
            <Button x:Name="StopAllTasksButton" Content="Stop All Tasks" Width="100" Margin="0,0,10,5" Click="StopAllTasksButton_Click"/>
            <TextBlock Text="Scheduler Mode:" Margin="10,0,5,5" VerticalAlignment="Center"/>
            <ComboBox x:Name="SchedulerModeDropdown" Width="120" Margin="0,0,10,5" SelectionChanged="SchedulerModeDropdown_Changed">
                <ComboBoxItem Content="Auto" IsSelected="True"/>
                <ComboBoxItem Content="Manual"/>
                <ComboBoxItem Content="Affinity"/>
                <ComboBoxItem Content="RoundRobin"/>
                <ComboBoxItem Content="LeastBusy"/>
            </ComboBox>
            <Button x:Name="SettingsButton" Content="Settings" Width="80" Margin="0,0,10,5" Click="SettingsButton_Click"/>
            <Button x:Name="ExitButton" Content="Save+Exit" Width="80" Margin="0,0,10,5" Click="ExitButton_Click"/>
        </WrapPanel>

        <!-- Row 2: Tasks and Alerts -->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <GroupBox Header="Tasks" Grid.Column="0" Margin="0,0,10,0">
                <StackPanel>
                    <ListBox x:Name="TaskListBox" Height="200">
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Stop Task" Click="StopTaskMenuItem_Click"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                    </ListBox>
                    <TextBlock Text="Total Tasks:" Margin="0,10,0,0"/>
                    <TextBlock x:Name="TaskCountLabel" FontWeight="Bold"/>
                </StackPanel>
            </GroupBox>

            <GroupBox Header="Alerts" Grid.Column="1">
                <ListBox x:Name="AlertBox" Height="250"/>
            </GroupBox>
        </Grid>

        <!-- Row 3: Nodes -->
        <GroupBox Header="Nodes" Grid.Row="3" Margin="0,10,0,10">
            <DataGrid x:Name="NodeGrid" AutoGenerateColumns="False" Height="150">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID" Binding="{Binding AgentId}" Width="100"/>
                    <DataGridTextColumn Header="Status" Binding="{Binding IsOnline, Converter={StaticResource BooleanToStringConverter}}" Width="80"/>
                    <DataGridTextColumn Header="IP Address" Binding="{Binding IpAddress}" Width="100"/>
                    <DataGridTextColumn Header="CPU Usage" Binding="{Binding CpuUsagePercent, StringFormat={}{0:F1}%}" Width="80"/>
                    <DataGridTextColumn Header="Memory" Binding="{Binding MemoryAvailableMB, StringFormat={}{0:F1} MB}" Width="80"/>
                    <DataGridTextColumn Header="Tasks" Binding="{Binding TaskQueueLength}" Width="60"/>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>

        <!-- Row 4: Log output -->
        <ListBox x:Name="LogBox" Grid.Row="4" Margin="0,0,0,0" Height="100"/>
    </Grid>
</Window>
