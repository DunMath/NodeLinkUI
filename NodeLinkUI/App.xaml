<Application x:Class="NodeLinkUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             ShutdownMode="OnMainWindowClose"
             Startup="Application_Startup">
    <Application.Resources>

        <!-- Darker neutral greys -->
        <SolidColorBrush x:Key="Neutral.Window"    Color="#D0D0D0"/>
        <SolidColorBrush x:Key="Neutral.Panel"     Color="#D6D6D6"/>
        <SolidColorBrush x:Key="Neutral.Head"      Color="#C6C6C6"/>
        <SolidColorBrush x:Key="Neutral.Border"    Color="#B0B0B0"/>
        <SolidColorBrush x:Key="Neutral.RowAlt"    Color="#CDCDCD"/>
        <SolidColorBrush x:Key="Neutral.Btn"       Color="#C8C8C8"/>
        <SolidColorBrush x:Key="Neutral.BtnOver"   Color="#BEBEBE"/>
        <SolidColorBrush x:Key="Neutral.BtnDown"   Color="#B4B4B4"/>
        <SolidColorBrush x:Key="Neutral.MenuBg"    Color="#D2D2D2"/>
        <SolidColorBrush x:Key="Neutral.MenuOver"  Color="#C6C6C6"/>

        <!-- Base: system text + darker greys -->
        <Style TargetType="Window">
            <Setter Property="Background" Value="{StaticResource Neutral.Window}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
            <Setter Property="FontSize"   Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding"   Value="True"/>
        </Style>

        <!-- Flat button (no 3D) -->
        <Style TargetType="Button">
            <Setter Property="Foreground"      Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background"      Value="{StaticResource Neutral.Btn}"/>
            <Setter Property="BorderBrush"     Value="{StaticResource Neutral.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding"         Value="10,6"/>
            <Setter Property="Margin"          Value="6,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Bg"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bg" Property="Background" Value="{StaticResource Neutral.BtnOver}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Bg" Property="Background" Value="{StaticResource Neutral.BtnDown}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.55"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Inputs -->
        <Style TargetType="TextBox">
            <Setter Property="Foreground"      Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background"      Value="White"/>
            <Setter Property="BorderBrush"     Value="{StaticResource Neutral.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding"         Value="8,6"/>
            <Setter Property="Margin"          Value="6,0,0,0"/>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Foreground"      Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background"      Value="White"/>
            <Setter Property="BorderBrush"     Value="{StaticResource Neutral.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding"         Value="6,3"/>
            <Setter Property="Margin"          Value="6,0,0,0"/>
            <Setter Property="MinWidth"        Value="140"/>
        </Style>

        <!-- Menus (hamburger) -->
        <Style TargetType="Menu">
            <Setter Property="Background"      Value="{StaticResource Neutral.MenuBg}"/>
            <Setter Property="BorderBrush"     Value="{StaticResource Neutral.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style TargetType="MenuItem">
            <Setter Property="Padding"         Value="10,6"/>
            <Setter Property="BorderBrush"     Value="{StaticResource Neutral.Border}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" Value="{StaticResource Neutral.MenuOver}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Containers -->
        <Style TargetType="GroupBox">
            <Setter Property="Padding"         Value="8"/>
            <Setter Property="Margin"          Value="0,6,0,0"/>
            <Setter Property="Foreground"      Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background"      Value="{StaticResource Neutral.Panel}"/>
            <Setter Property="BorderBrush"     Value="{StaticResource Neutral.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!-- DataGrid -->
        <Style TargetType="DataGrid">
            <Setter Property="Foreground"                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background"                Value="{StaticResource Neutral.Panel}"/>
            <Setter Property="AlternationCount"          Value="2"/>
            <Setter Property="AlternatingRowBackground"  Value="{StaticResource Neutral.RowAlt}"/>
            <Setter Property="RowHeaderWidth"            Value="0"/>
            <Setter Property="GridLinesVisibility"       Value="None"/>
            <Setter Property="BorderBrush"               Value="{StaticResource Neutral.Border}"/>
            <Setter Property="BorderThickness"           Value="1"/>
        </Style>

        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background"      Value="{StaticResource Neutral.Head}"/>
            <Setter Property="Foreground"      Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush"     Value="{StaticResource Neutral.Border}"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="Padding"         Value="6,4"/>
            <Setter Property="FontWeight"      Value="SemiBold"/>
        </Style>

        <!-- Lists -->
        <Style TargetType="ListBox">
            <Setter Property="Foreground"      Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background"      Value="{StaticResource Neutral.Panel}"/>
            <Setter Property="BorderBrush"     Value="{StaticResource Neutral.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!-- Text blocks -->
        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

    </Application.Resources>
</Application>

